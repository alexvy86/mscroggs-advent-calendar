RED DRONE

initial_x -> 18
             (door 4) deduction
initial_y -> 13
             (door 10 plus others)
speed_x   -> 7
             factor of 840 (door 2) - not 9, 11, 13, 16, 17, 18, 19
             is 9, 8, or 7 (door 11) - drop almost everything else
             not a factor of 128 (door 6) - drop 8
speed_y   -> 1
             is 1 (door 1) - drop everything else

(door 4)
On Dec 2, red's horizontal position was 5
r_x(2) = (r_x0 + 1*7) = 5, so r_x0 = 18

(door 10)
red_y(8) = 20, => (r_y0 + 7*1) = 20 => r_y0 = 13

------
BLUE DRONE

initial_x -> 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20
initial_y -> 9
             blue_y(4) = 14 (door 14) => (b_y0 + 3*15) = 14 => b_y0 = 9
speed_x   -> 1 2 4 5 7 8 10 11 12 13 14 15 16 17 18 19 20
             not 3, 6, or 9 (door 3)
speed_y   -> 15
             not 1, 3, 5 (door 5)
             not 4, 6, 7 (door 7)
             factor of 840 (door 8) - not 9, 11, 13, 16, 17, 18, 19
             must be 15, because the restrictions on y(4) and y(6) only allow it to be 5 or 15

blue_y(8) != 20 (door 10 + 14)
blue_y(6) = 4 (door 13; red cannot be one of them)

In order for blue_y(4) = 14 and blue_y(6) = 4, speed_y = 5 or 15

------
ORANGE DRONE

initial_x -> 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20
             trial and error on 12/15 -> can't be 1
             trial and error on 12/16 -> can't be 2 nor 3
initial_y -> 4
             since y(6) = 4 => (o_y0 + 5*8) = 4 => o_y0 = 4
speed_x   -> 3 4
             1, 3, or 4 (door 12) - drop everything else
             2, 3, or 4 (door 16) - drop 1
speed_y   -> 8
             In order for orange_y(6) = 4 and orange_y(8) = 20 , speed_y = 8 or 18. But 18 would make y(5) = 6,
             which it cannot be, so speed_y = 8.

orange_y(5) != 6 (door 9)
orange_y(8) = 20 (door 10)
orange_y(6) = 4 (door 13; red cannot be one of them)



12/15 - Trial and error
orange(n) = (x0 + (n-1)*[1,3,4], 4 + (n-1)*8)
Let's assume x0 = 1
speed_x = 1 => orange(15) = (1 + 14*1, 4 + 14*8) = (15, 16) no hit
speed_x = 3 => orange(15) = (1 + 14*3, 4 + 14*8) = (3, 16) no hit
speed_x = 4 => orange(15) = (1 + 14*4, 4 + 14*8) = (17, 16) no hit
So x0 != 1
Let's assume x0 = 2
speed_x = 1 => orange(15) = (2 + 14*1, 4 + 14*8) = (16, 16) no hit

12/16 - Trial and error
Let's assume x0 = 2
speed_x = 3 => orange(16) = (2 + 15*3, 4 + 15*8) = (7, 4) no hit
speed_x = 4 => orange(16) = (2 + 15*4, 4 + 15*8) = (2, 4) no hit
So x0 != 2
Let's assume x0 = 3
speed_x = 3 => orange(16) = (3 + 15*3, 4 + 15*8) = (8, 4) no hit
speed_x = 4 => orange(16) = (3 + 15*4, 4 + 15*8) = (3, 4) no hit
So x0 != 3
